A '''forensic disk controller''' or '''hardware write-block device''' is a specialized type of computer  made for the purpose of gaining read-only access to computer s without the risk of damaging the drive's contents.  The device is named  because its most common application is for use in s where a computer hard drive may contain evidence.  Such a controller historically has been made in the form of a  that fits between a computer and an  or  hard drive, but with the advent of  and , forensic disk controllers supporting these newer technologies have become widespread.
Using hardware to protect the hard drive from writes is very important for several reasons.  First, many s, including , may write to any hard disk that is connected to the system.  At the very least, Windows will update the  for any file accessed, and may write things to the disk unexpectedly - such as creating hidden folders for the  or saved hardware configuration.   infections or  on the system used for analysis may attempt to infect the disk being inspected.  Additionally, the  file system may attempt to commit or rollback unfinished transactions, and/or change flags on the volume to mark it as "in use".  At the worst, undesired files may allocate and overwrite deleted space on the hard disk which may potentially destroy evidence in the form of previously deleted files.
Protecting an evidence drive from writes during investigation is also important to counter potential allegations that the contents of the drive were altered during the investigation.  Of course, this can be alleged anyway, but in the absence of technology to protect a drive from writes, there is no way for such an allegation to be refuted.
The United States  operates a Computer Forensics Tool Testing (CFTT) program which formally identifies<ref>http://www.cftt.nist.gov/HWB-ATP-19.pdf</ref> the following top-level tool requirements:
All forensic disk controllers work by capturing commands from the host  that request the drive to overwrite sectors, and preventing them from reaching the drive.  Whenever the host bus architecture supports it, the forensic disk controller reports to the host operating system that the drive is read-only.
A forensic disk controller works in one of two ways.  The disk controller can either deny all writes to the disk and report them as failures, or use on-board memory to cache the writes for the duration of the session.
A disk controller that denies all writes will likely not be tolerated by an operating system that assumes that all hard disks can be written to.  Although the controller could report the writes as successful, subsequent reads will return the original data, which will be unexpected by the operating system and which will cause it to malfunction due to the internal inconsistency between the operating system and the drive's actual state.
A disk controller that caches writes in memory presents the appearance to the operating system that the drive is writable, and uses the memory to ensure that the operating system sees changes to the individual disk sectors it attempted to overwrite.  It does this by retrieving sectors from the disk if the operating system hasn't attempted to change them, and retrieving the changed version from memory for sectors that have been changed.  This method is transparent to and compatible with all operating systems, and ensures that when the device is powered off, the disk remains unchanged and in its original state.  Because the operating system's internal state persists only as long as the drive is mounted or powered on, assuming none of the writes were desired there is no adverse consequence to losing the data in the change buffer.